
;;;
; portals
;;;
; in bank 'BANK_PORTALS'

; for rendering and movement checks
MEM_PORTALS_SECTOR = $BF00

; for rendering
MEM_PORTALS_X0 = $BF40
MEM_PORTALS_X1 = $BF80
MEM_PORTALS_SPRITE = $BFC0

MEM_PORTALS_MASKED = $BEF0

; for movement checks
MEM_PORTALS_ISLINK = MEM_PORTALS_X0
MEM_PORTALS_TOUCH = MEM_PORTALS_X1

;;;
; special thing types
;;;

THING_TYPE_PLAYER_N = 127
THING_TYPE_PLAYER_C = 126
THING_TYPE_PLAYER_S = 125
THING_TYPE_PLAYER_F = 124

THING_WEAPON_COUNT = 12
THING_WEAPON_FIRST = 112

;;;
; tick command bits
;;;

TCMD_GO_DOWN = $01	; forced by code
TCMD_ATK = $02	; forced by code (mouse input)
TCMD_ALT = $04	; forced by code (mouse input)
TCMD_USE = $20
TCMD_GO_UP = $40	; forced by code
TCMD_MOVING = $80	; forced by code

;;;
; function variables for 'things'
;;;

ARG_THING_SPAWN_X_S = $02
ARG_THING_SPAWN_X_L = $03
ARG_THING_SPAWN_X_H = $04
ARG_THING_SPAWN_Y_S = $05
ARG_THING_SPAWN_Y_L = $06
ARG_THING_SPAWN_Y_H = $07
ARG_THING_SPAWN_Z_S = $08
ARG_THING_SPAWN_Z_L = $09
ARG_THING_SPAWN_Z_H = $0A
ARG_THING_SPAWN_SECTOR = $0B
ARG_THING_SPAWN_TYPE = $0C
ARG_THING_PLACE_SECTOR = $0D
ARG_THING_CHECK_ONFLOOR = $0E

RET_THING_SPAWN = $0F
RET_THING_CHECK_NEWSEC = $10

; overlap
ARG_THING_CHECK_X_S = ARG_THING_SPAWN_X_S
ARG_THING_CHECK_X_L = ARG_THING_SPAWN_X_L
ARG_THING_CHECK_X_H = ARG_THING_SPAWN_X_H
ARG_THING_CHECK_Y_S = ARG_THING_SPAWN_Y_S
ARG_THING_CHECK_Y_L = ARG_THING_SPAWN_Y_L
ARG_THING_CHECK_Y_H = ARG_THING_SPAWN_Y_H
ARG_THING_CHECK_Z_L = ARG_THING_SPAWN_Z_L
ARG_THING_CHECK_Z_H = ARG_THING_SPAWN_Z_H
ARG_THING_CHECK_SECTOR = ARG_THING_SPAWN_SECTOR

; overlap
ARG_HITSCAN_ANGLE = ARG_THING_SPAWN_Z_S
ARG_HITSCAN_PITCH = ARG_THING_CHECK_ONFLOOR
ARG_HITSCAN_TYPE = ARG_THING_SPAWN_TYPE

;;;
; texture info structure
;;;
; there are 128 texture slots
; wall and plane texture info is different

TEXINFO_STRUCT_NHASH_0 = $A000
TEXINFO_STRUCT_NHASH_1 = $A080
TEXINFO_STRUCT_NHASH_2 = $A100
TEXINFO_STRUCT_NHASH_3 = $A180
TEXINFO_STRUCT_VHASH_0 = $A200
TEXINFO_STRUCT_VHASH_1 = $A280
TEXINFO_STRUCT_VHASH_2 = $A300
TEXINFO_STRUCT_VHASH_3 = $A380
TEXINFO_STRUCT_TYPE = $A400

; plane 'resolution' and data source
TEXINFO_STRUCT_P_TILE_DATA = $B700
TEXINFO_STRUCT_P_TILE_MAP = $B780

; effect field is shared with planes and walls
; walls support only 'animation' effect
TEXINFO_STRUCT_EFFECT_0 = $A500
TEXINFO_STRUCT_EFFECT_1 = $A580
TEXINFO_STRUCT_EFFECT_2 = $A600
TEXINFO_STRUCT_EFFECT_3 = $A680

; wall resolution and column offsets
TEXINFO_STRUCT_W_COLS_L = $AF00
TEXINFO_STRUCT_W_COLS_H = $AF80

; colormap offets for each light
TEXINFO_STRUCT_P_COLORMAP = $B000	; 16 x 128 etries, LO and HI bytes

; base data offsets for each light
TEXINFO_STRUCT_W_DATA_LH = $B000	; 2 x 16 x 128 entries

;;;
; sprite info structure
;;;
; rotation offsets are forced by code
; stored in 'BANK_TSPR_INFO'

SPRINFO_STRUCT_ROT0_L = $A000
SPRINFO_STRUCT_ROT1_L = $A100
SPRINFO_STRUCT_ROT2_L = $A200
SPRINFO_STRUCT_ROT3_L = $A300
SPRINFO_STRUCT_ROT4_L = $A400
SPRINFO_STRUCT_ROT5_L = $A500
SPRINFO_STRUCT_ROT6_L = $A600
SPRINFO_STRUCT_ROT7_L = $A700

SPRINFO_STRUCT_ROT0_H = $A800
SPRINFO_STRUCT_ROT1_H = $A900
SPRINFO_STRUCT_ROT2_H = $AA00
SPRINFO_STRUCT_ROT3_H = $AB00
SPRINFO_STRUCT_ROT4_H = $AC00
SPRINFO_STRUCT_ROT5_H = $AD00
SPRINFO_STRUCT_ROT6_H = $AE00
SPRINFO_STRUCT_ROT7_H = $AF00

SPRINFO_STRUCT_ROTATE = $B000

; NOTE: $B100 to $BF00 is used for thing position

;;;
; sprite frame structure
;;;
; structure offsets are forced by code
; stored in 'BANK_THING_STATES'

SPRFRM_STRUCT_0_WIDTH = $A000
SPRFRM_STRUCT_0_HEIGHT = $A100
SPRFRM_STRUCT_0_OX = $A200
SPRFRM_STRUCT_0_OY = $A300
SPRFRM_STRUCT_0_OFFS_COLS_L = $A400
SPRFRM_STRUCT_0_OFFS_COLS_H = $A500
SPRFRM_STRUCT_0_OFFS_DATA_L = $A600
SPRFRM_STRUCT_0_OFFS_DATA_H = $A700

; NOTE: $A800 to $BF00 is used for player starts

SPRFRM_STRUCT_1_WIDTH = $B000
SPRFRM_STRUCT_1_HEIGHT = $B100
SPRFRM_STRUCT_1_OX = $B200
SPRFRM_STRUCT_1_OY = $B300
SPRFRM_STRUCT_1_OFFS_COLS_L = $B400
SPRFRM_STRUCT_1_OFFS_COLS_H = $B500
SPRFRM_STRUCT_1_OFFS_DATA_L = $B600
SPRFRM_STRUCT_1_OFFS_DATA_H = $B700

; NOTE: $BC00 to $BF00 is used for player starts

;;;
; player start structure
;;;
; stored in 'BANK_PLAYER_START', this bank is shared with 'BANK_THING_STATES'

PLRSTART_STRUCT_X_L = $AA00
PLRSTART_STRUCT_X_H = $AB00
PLRSTART_STRUCT_Y_L = $AC00
PLRSTART_STRUCT_Y_H = $AD00
PLRSTART_STRUCT_Z_L = $AE00
PLRSTART_STRUCT_Z_H = $AF00

PLRSTART_STRUCT_SECTOR = $BC00
PLRSTART_STRUCT_ANGLE = $BD00
PLRSTART_STRUCT_PITCH = $BE00
PLRSTART_STRUCT_FLAGS = $BF00

;;;
; thing type structure
;;;

; there are 128 thing types
; thing info properties start at $00
; thing animation and sprite stuff starts at $80
; this is forced by ASM implementation

THTYPE_STRUCT_RADIUS = $A000
THTYPE_STRUCT_HEIGHT = $A100
THTYPE_STRUCT_BLOCKING = $A200
THTYPE_STRUCT_BLOCKEDBY = $A300
THTYPE_STRUCT_MASS = $A400
THTYPE_STRUCT_GRAVITY = $A500
THTYPE_STRUCT_SPEED = $A600
THTYPE_STRUCT_EFLAGS = $A700
THTYPE_STRUCT_HEALTH_L = $A800
THTYPE_STRUCT_HEALTH_H = $A900
THTYPE_STRUCT_SCALE = $AA00
THTYPE_STRUCT_STEP_HEIGHT = $AB00
THTYPE_STRUCT_VIEW_HEIGHT = $AC00
THTYPE_STRUCT_WATER_HEIGHT = $AD00
THTYPE_STRUCT_JUMPZ = $AE00
THTYPE_STRUCT_SPAWN_A = $AF00
THTYPE_STRUCT_SPAWN_B = $B000
THTYPE_STRUCT_SPAWN_C = $B100
THTYPE_STRUCT_SPAWN_D = $B200

THTYPE_ANIM_SPAWN_L = $A080
THTYPE_ANIM_SPAWN_H = $A880
THTYPE_ANIM_PAIN_L = $A180
THTYPE_ANIM_PAIN_H = $A980
THTYPE_ANIM_DEATH_L = $A280
THTYPE_ANIM_DEATH_H = $AA80

THTYPE_ANIM_READY_L = $A380
THTYPE_ANIM_READY_H = $AB80
THTYPE_ANIM_ATK_L = $A480
THTYPE_ANIM_ATK_H = $AC80
THTYPE_ANIM_ALT_L = $A580
THTYPE_ANIM_ALT_H = $AD80
THTYPE_ANIM_RAISE_L = $A680
THTYPE_ANIM_RAISE_H = $AE80
THTYPE_ANIM_LOWER_L = $A780
THTYPE_ANIM_LOWER_H = $AF80

THTYPE_ANIM_L = THTYPE_ANIM_SPAWN_L
THTYPE_ANIM_H = THTYPE_ANIM_SPAWN_H
THTYPE_ANIM_C = $B080

; sprite name hashes
THTYPE_SHASH_0 = $B880
THTYPE_SHASH_1 = $B980
THTYPE_SHASH_2 = $BA80
THTYPE_SHASH_3 = $BB80

; thing name hashes
THTYPE_NHASH_0 = $BC80
THTYPE_NHASH_1 = $BD80
THTYPE_NHASH_2 = $BE80
THTYPE_NHASH_3 = $BF80

THTYPE_ANIM_COUNT = 8

;;;
; thing state structure
;;;
; structure offsets are forced by code

THSTATE_STRUCT_ACTION = $00
THSTATE_STRUCT_NEXT = $01
THSTATE_STRUCT_FRM_NXT = $02
THSTATE_STRUCT_SPRITE = $03
THSTATE_STRUCT_TICKS = $04
THSTATE_STRUCT_ARG0 = $05
THSTATE_STRUCT_ARG1 = $06
THSTATE_STRUCT_ARG2 = $07

THSTATE__STRUCT_SIZE = $08

;;;
; weapon part structure
;;;

WPART__STRUCT_SIZE = $04

;;;
; internal thing flags
;;;

THING_IFLAG_NOJUMP = $01	; forced by code
THING_IFLAG_USED = $20
THING_IFLAG_JUMPED = $40	; forced by code
THING_IFLAG_HEIGHTCHECK = $80	; forced by code

THING_EFLAG_SLIDING = $80	; forced by code
THING_EFLAG_CLIMBABLE = $40	; forced by code
THING_EFLAG_PROJECTILE = $04
THING_EFLAG_WATERSPEC = $02
THING_EFLAG_PUSHABLE = $01	; forced by code

;;;
; thing structure
;;;
; limit: 64 bytes (128 thing slots)
; stored in 'BANK_THING_STRUCT'

THING_STRUCT_TYPE = $A000

THING_STRUCT_ANGLE = $A100
THING_STRUCT_PITCH = $A200

THING_STRUCT_EFLAGS = $A300
THING_STRUCT_IFLAGS = $A400

THING_STRUCT_RADIUS = $A500
THING_STRUCT_HEIGHT = $A600
THING_STRUCT_GRAVITY = $A700

THING_STRUCT_FLOORZ_L = $A800
THING_STRUCT_FLOORZ_H = $A900
THING_STRUCT_CEILZ_L = $AA00
THING_STRUCT_CEILZ_H = $AB00

THING_STRUCT_FLOORS = $AC00
THING_STRUCT_CEILS = $AD00

THING_STRUCT_SCALE = $AE00

THING_STRUCT_HEALTH_L = $AF00
THING_STRUCT_HEALTH_H = $B000

THING_STRUCT_TH_ORIGIN = $B100
THING_STRUCT_TH_TARGET = $B200

THING_STRUCT_BLOCKING = $B300
THING_STRUCT_BLOCKEDBY = $B400

THING_STRUCT_COUNTER = $B500

THING_STRUCT_SPRITE = $B600
THING_STRUCT_TICKS = $B700
THING_STRUCT_NXTFRM_L = $B800
THING_STRUCT_NXTFRM_H = $B900

; position

THING_STRUCT_X_S = $A080
THING_STRUCT_X_L = $A180
THING_STRUCT_X_H = $A280
THING_STRUCT_Y_S = $A380
THING_STRUCT_Y_L = $A480
THING_STRUCT_Y_H = $A580
THING_STRUCT_Z_S = $A680
THING_STRUCT_Z_L = $A780
THING_STRUCT_Z_H = $A880
THING_STRUCT_MX_S = $A980
THING_STRUCT_MX_L = $AA80
THING_STRUCT_MY_S = $AB80
THING_STRUCT_MY_L = $AC80
THING_STRUCT_MZ_S = $AD80
THING_STRUCT_MZ_L = $AE80

;;;
; wall structure
;;;

WALL_STRUCT_VTX_X = $00
WALL_STRUCT_VTX_Y = $02
WALL_STRUCT_DIST_X = $04
WALL_STRUCT_DIST_Y = $06
WALL_STRUCT_ANGLE = $08
WALL_STRUCT_SPECIAL = $0A
WALL_STRUCT_TEX_FLAGS = $0C
WALL_STRUCT_TEX_TOP = $0D
WALL_STRUCT_TEX_TOP_X = $0E
WALL_STRUCT_TEX_TOP_Y = $0F
WALL_STRUCT_TEX_BOT = $10
WALL_STRUCT_TEX_BOT_X = $11
WALL_STRUCT_TEX_BOT_Y = $12
WALL_STRUCT_BACKSECTOR = $13
WALL_STRUCT_BLOCKING = $14
;
WALL_STRUCT_HEIGHT_SPLIT = $13
;
WALL_STRUCT_TEX_MID = $15
WALL_STRUCT_TEX_MID_X = $16
WALL_STRUCT_TEX_MID_Y = $17
WALL_STRUCT_TEX_MID_B = $18
;
WALL__STRUCT_SIZE_SOLID = $10
WALL__STRUCT_SIZE_SPLIT = $15
WALL__STRUCT_SIZE_PORTAL = $15
WALL__STRUCT_SIZE_MASKED = $19
WALL__STRUCT_SIZE_SCROLL = $02
; forced by code
WALL__MARK_SPLIT = $10
WALL__MARK_PORTAL = $20
WALL__MARK_SCROLL = $40
WALL__MARK_LAST = $80
WALL__MARK_MID_BITS = WALL__MARK_SPLIT | WALL__MARK_PORTAL
WALL__MARK_MASKED = WALL__MARK_MID_BITS

WALL__TEXFLAG_PEG_Y = 1
WALL__TEXFLAG_MIRROR_X = 2
WALL__TEXFLAG_MIRROR_Y_SWAP_XY = 4

;;;
; sector structure
;;;

SECTOR_STRUCT_FLOOR_HEIGHT_L = $A000
SECTOR_STRUCT_FLOOR_HEIGHT_H = $A100
SECTOR_STRUCT_FLOOR_TEXTURE = $A200
SECTOR_STRUCT_FLOOR_OX = $A300
SECTOR_STRUCT_FLOOR_OY = $A400
SECTOR_STRUCT_FLOOR_SX = $A500
SECTOR_STRUCT_FLOOR_SY = $A600
SECTOR_STRUCT_FLOOR_ANG = $A700
SECTOR_STRUCT_FLOOR_LINK = $A800
SECTOR_STRUCT_CEILING_HEIGHT_L = $A900
SECTOR_STRUCT_CEILING_HEIGHT_H = $AA00
SECTOR_STRUCT_CEILING_TEXTURE = $AB00
SECTOR_STRUCT_CEILING_OX = $AC00
SECTOR_STRUCT_CEILING_OY = $AD00
SECTOR_STRUCT_CEILING_SX = $AE00
SECTOR_STRUCT_CEILING_SY = $AF00
SECTOR_STRUCT_CEILING_ANG = $B000
SECTOR_STRUCT_CEILING_LINK = $B100
SECTOR_STRUCT_WALLS_L = $B200
SECTOR_STRUCT_WALLS_H = $B300
SECTOR_STRUCT_FLAGS = $B400
SECTOR_STRUCT_FLOOR_DIST = $B500
SECTOR_STRUCT_FLOOR_MASKED = $B600

; internal
SECTOR_STRUCT_MASKBLOCK = $BF00

;; only external size
SECTOR__STRUCT_SIZE = $17

